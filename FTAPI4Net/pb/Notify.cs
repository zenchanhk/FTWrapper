// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Futu.OpenApi.Pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Notify {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_Notify_GtwEvent__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.GtwEvent, global::Futu.OpenApi.Pb.Notify.GtwEvent.Builder> internal__static_Notify_GtwEvent__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_ProgramStatus__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.ProgramStatus, global::Futu.OpenApi.Pb.Notify.ProgramStatus.Builder> internal__static_Notify_ProgramStatus__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_ConnectStatus__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.ConnectStatus, global::Futu.OpenApi.Pb.Notify.ConnectStatus.Builder> internal__static_Notify_ConnectStatus__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_QotRight__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.QotRight, global::Futu.OpenApi.Pb.Notify.QotRight.Builder> internal__static_Notify_QotRight__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_APILevel__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.APILevel, global::Futu.OpenApi.Pb.Notify.APILevel.Builder> internal__static_Notify_APILevel__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_S2C__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.S2C, global::Futu.OpenApi.Pb.Notify.S2C.Builder> internal__static_Notify_S2C__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_Response__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.Response, global::Futu.OpenApi.Pb.Notify.Response.Builder> internal__static_Notify_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Notify() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxOb3RpZnkucHJvdG8SBk5vdGlmeRoMQ29tbW9uLnByb3RvIjwKCEd0d0V2", 
            "ZW50EhwKCWV2ZW50VHlwZRgBIAIoBVIJZXZlbnRUeXBlEhIKBGRlc2MYAiAC", 
            "KAlSBGRlc2MiTAoNUHJvZ3JhbVN0YXR1cxI7Cg1wcm9ncmFtU3RhdHVzGAEg", 
            "AigLMhUuQ29tbW9uLlByb2dyYW1TdGF0dXNSDXByb2dyYW1TdGF0dXMiTwoN", 
            "Q29ubmVjdFN0YXR1cxIeCgpxb3RMb2dpbmVkGAEgAigIUgpxb3RMb2dpbmVk", 
            "Eh4KCnRyZExvZ2luZWQYAiACKAhSCnRyZExvZ2luZWQiyAEKCFFvdFJpZ2h0", 
            "Eh4KCmhrUW90UmlnaHQYBCACKAVSCmhrUW90UmlnaHQSHgoKdXNRb3RSaWdo", 
            "dBgFIAIoBVIKdXNRb3RSaWdodBIeCgpjblFvdFJpZ2h0GAYgAigFUgpjblFv", 
            "dFJpZ2h0EioKEGhrT3B0aW9uUW90UmlnaHQYByABKAVSEGhrT3B0aW9uUW90", 
            "UmlnaHQSMAoTaGFzVVNPcHRpb25Rb3RSaWdodBgIIAEoCFITaGFzVVNPcHRp", 
            "b25Rb3RSaWdodCImCghBUElMZXZlbBIaCghhcGlMZXZlbBgDIAIoCVIIYXBp", 
            "TGV2ZWwilwIKA1MyQxISCgR0eXBlGAEgAigFUgR0eXBlEiYKBWV2ZW50GAIg", 
            "ASgLMhAuTm90aWZ5Lkd0d0V2ZW50UgVldmVudBI7Cg1wcm9ncmFtU3RhdHVz", 
            "GAMgASgLMhUuTm90aWZ5LlByb2dyYW1TdGF0dXNSDXByb2dyYW1TdGF0dXMS", 
            "OwoNY29ubmVjdFN0YXR1cxgEIAEoCzIVLk5vdGlmeS5Db25uZWN0U3RhdHVz", 
            "Ug1jb25uZWN0U3RhdHVzEiwKCHFvdFJpZ2h0GAUgASgLMhAuTm90aWZ5LlFv", 
            "dFJpZ2h0Ughxb3RSaWdodBIsCghhcGlMZXZlbBgGIAEoCzIQLk5vdGlmeS5B", 
            "UElMZXZlbFIIYXBpTGV2ZWwiewoIUmVzcG9uc2USHgoHcmV0VHlwZRgBIAIo", 
            "BToELTQwMFIHcmV0VHlwZRIWCgZyZXRNc2cYAiABKAlSBnJldE1zZxIYCgdl", 
            "cnJDb2RlGAMgASgFUgdlcnJDb2RlEh0KA3MyYxgEIAEoCzILLk5vdGlmeS5T", 
            "MkNSA3MyYyqlAQoKTm90aWZ5VHlwZRITCg9Ob3RpZnlUeXBlX05vbmUQABIX", 
            "ChNOb3RpZnlUeXBlX0d0d0V2ZW50EAESHAoYTm90aWZ5VHlwZV9Qcm9ncmFt", 
            "U3RhdHVzEAISGQoVTm90aWZ5VHlwZV9Db25uU3RhdHVzEAMSFwoTTm90aWZ5", 
            "VHlwZV9Rb3RSaWdodBAEEhcKE05vdGlmeVR5cGVfQVBJTGV2ZWwQBSqbBAoM", 
            "R3R3RXZlbnRUeXBlEhUKEUd0d0V2ZW50VHlwZV9Ob25lEAASIwofR3R3RXZl", 
            "bnRUeXBlX0xvY2FsQ2ZnTG9hZEZhaWxlZBABEiAKHEd0d0V2ZW50VHlwZV9B", 
            "UElTdnJSdW5GYWlsZWQQAhIcChhHdHdFdmVudFR5cGVfRm9yY2VVcGRhdGUQ", 
            "AxIcChhHdHdFdmVudFR5cGVfTG9naW5GYWlsZWQQBBIiCh5HdHdFdmVudFR5", 
            "cGVfVW5BZ3JlZURpc2NsYWltZXIQBRIeChpHdHdFdmVudFR5cGVfTmV0Q2Zn", 
            "TWlzc2luZxAGEhoKFkd0d0V2ZW50VHlwZV9LaWNrZWRPdXQQBxIgChxHdHdF", 
            "dmVudFR5cGVfTG9naW5Qd2RDaGFuZ2VkEAgSGQoVR3R3RXZlbnRUeXBlX0Jh", 
            "bkxvZ2luEAkSIgoeR3R3RXZlbnRUeXBlX05lZWRQaWNWZXJpZnlDb2RlEAoS", 
            "JAogR3R3RXZlbnRUeXBlX05lZWRQaG9uZVZlcmlmeUNvZGUQCxIgChxHdHdF", 
            "dmVudFR5cGVfQXBwRGF0YU5vdEV4aXN0EAwSIwofR3R3RXZlbnRUeXBlX05l", 
            "c3NhcnlEYXRhTWlzc2luZxANEiAKHEd0d0V2ZW50VHlwZV9UcmFkZVB3ZENo", 
            "YW5nZWQQDhIhCh1HdHdFdmVudFR5cGVfRW5hYmxlRGV2aWNlTG9jaxAPQhUK", 
          "E2NvbS5mdXR1Lm9wZW5hcGkucGI="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Notify_GtwEvent__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Notify_GtwEvent__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.GtwEvent, global::Futu.OpenApi.Pb.Notify.GtwEvent.Builder>(internal__static_Notify_GtwEvent__Descriptor,
                new string[] { "EventType", "Desc", });
        internal__static_Notify_ProgramStatus__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Notify_ProgramStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.ProgramStatus, global::Futu.OpenApi.Pb.Notify.ProgramStatus.Builder>(internal__static_Notify_ProgramStatus__Descriptor,
                new string[] { "ProgramStatus_", });
        internal__static_Notify_ConnectStatus__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Notify_ConnectStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.ConnectStatus, global::Futu.OpenApi.Pb.Notify.ConnectStatus.Builder>(internal__static_Notify_ConnectStatus__Descriptor,
                new string[] { "QotLogined", "TrdLogined", });
        internal__static_Notify_QotRight__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Notify_QotRight__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.QotRight, global::Futu.OpenApi.Pb.Notify.QotRight.Builder>(internal__static_Notify_QotRight__Descriptor,
                new string[] { "HkQotRight", "UsQotRight", "CnQotRight", "HkOptionQotRight", "HasUSOptionQotRight", });
        internal__static_Notify_APILevel__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Notify_APILevel__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.APILevel, global::Futu.OpenApi.Pb.Notify.APILevel.Builder>(internal__static_Notify_APILevel__Descriptor,
                new string[] { "ApiLevel", });
        internal__static_Notify_S2C__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Notify_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.S2C, global::Futu.OpenApi.Pb.Notify.S2C.Builder>(internal__static_Notify_S2C__Descriptor,
                new string[] { "Type", "Event", "ProgramStatus", "ConnectStatus", "QotRight", "ApiLevel", });
        internal__static_Notify_Response__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Notify_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.Response, global::Futu.OpenApi.Pb.Notify.Response.Builder>(internal__static_Notify_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.Common.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Futu.OpenApi.Pb.Common.Descriptor, 
          }, assigner);
    }
    #endregion
    
    #region Enums
    public enum NotifyType {
      NotifyType_None = 0,
      NotifyType_GtwEvent = 1,
      NotifyType_ProgramStatus = 2,
      NotifyType_ConnStatus = 3,
      NotifyType_QotRight = 4,
      NotifyType_APILevel = 5,
    }
    
    public enum GtwEventType {
      GtwEventType_None = 0,
      GtwEventType_LocalCfgLoadFailed = 1,
      GtwEventType_APISvrRunFailed = 2,
      GtwEventType_ForceUpdate = 3,
      GtwEventType_LoginFailed = 4,
      GtwEventType_UnAgreeDisclaimer = 5,
      GtwEventType_NetCfgMissing = 6,
      GtwEventType_KickedOut = 7,
      GtwEventType_LoginPwdChanged = 8,
      GtwEventType_BanLogin = 9,
      GtwEventType_NeedPicVerifyCode = 10,
      GtwEventType_NeedPhoneVerifyCode = 11,
      GtwEventType_AppDataNotExist = 12,
      GtwEventType_NessaryDataMissing = 13,
      GtwEventType_TradePwdChanged = 14,
      GtwEventType_EnableDeviceLock = 15,
    }
    
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class GtwEvent : pb::GeneratedMessage<GtwEvent, GtwEvent.Builder> {
      private GtwEvent() { }
      private static readonly GtwEvent defaultInstance = new GtwEvent().MakeReadOnly();
      private static readonly string[] _gtwEventFieldNames = new string[] { "desc", "eventType" };
      private static readonly uint[] _gtwEventFieldTags = new uint[] { 18, 8 };
      public static GtwEvent DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override GtwEvent DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override GtwEvent ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_GtwEvent__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<GtwEvent, GtwEvent.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_GtwEvent__FieldAccessorTable; }
      }
      
      public const int EventTypeFieldNumber = 1;
      private bool hasEventType;
      private int eventType_;
      public bool HasEventType {
        get { return hasEventType; }
      }
      public int EventType {
        get { return eventType_; }
      }
      
      public const int DescFieldNumber = 2;
      private bool hasDesc;
      private string desc_ = "";
      public bool HasDesc {
        get { return hasDesc; }
      }
      public string Desc {
        get { return desc_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasEventType) return false;
          if (!hasDesc) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _gtwEventFieldNames;
        if (hasEventType) {
          output.WriteInt32(1, field_names[1], EventType);
        }
        if (hasDesc) {
          output.WriteString(2, field_names[0], Desc);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEventType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, EventType);
        }
        if (hasDesc) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Desc);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static GtwEvent ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static GtwEvent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static GtwEvent ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static GtwEvent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static GtwEvent ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static GtwEvent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static GtwEvent ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static GtwEvent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static GtwEvent ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static GtwEvent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private GtwEvent MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(GtwEvent prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<GtwEvent, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(GtwEvent cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private GtwEvent result;
        
        private GtwEvent PrepareBuilder() {
          if (resultIsReadOnly) {
            GtwEvent original = result;
            result = new GtwEvent();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override GtwEvent MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.GtwEvent.Descriptor; }
        }
        
        public override GtwEvent DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.GtwEvent.DefaultInstance; }
        }
        
        public override GtwEvent BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is GtwEvent) {
            return MergeFrom((GtwEvent) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(GtwEvent other) {
          if (other == global::Futu.OpenApi.Pb.Notify.GtwEvent.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasEventType) {
            EventType = other.EventType;
          }
          if (other.HasDesc) {
            Desc = other.Desc;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_gtwEventFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _gtwEventFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasEventType = input.ReadInt32(ref result.eventType_);
                break;
              }
              case 18: {
                result.hasDesc = input.ReadString(ref result.desc_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasEventType {
          get { return result.hasEventType; }
        }
        public int EventType {
          get { return result.EventType; }
          set { SetEventType(value); }
        }
        public Builder SetEventType(int value) {
          PrepareBuilder();
          result.hasEventType = true;
          result.eventType_ = value;
          return this;
        }
        public Builder ClearEventType() {
          PrepareBuilder();
          result.hasEventType = false;
          result.eventType_ = 0;
          return this;
        }
        
        public bool HasDesc {
          get { return result.hasDesc; }
        }
        public string Desc {
          get { return result.Desc; }
          set { SetDesc(value); }
        }
        public Builder SetDesc(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasDesc = true;
          result.desc_ = value;
          return this;
        }
        public Builder ClearDesc() {
          PrepareBuilder();
          result.hasDesc = false;
          result.desc_ = "";
          return this;
        }
      }
      static GtwEvent() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ProgramStatus : pb::GeneratedMessage<ProgramStatus, ProgramStatus.Builder> {
      private ProgramStatus() { }
      private static readonly ProgramStatus defaultInstance = new ProgramStatus().MakeReadOnly();
      private static readonly string[] _programStatusFieldNames = new string[] { "programStatus" };
      private static readonly uint[] _programStatusFieldTags = new uint[] { 10 };
      public static ProgramStatus DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override ProgramStatus DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override ProgramStatus ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_ProgramStatus__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<ProgramStatus, ProgramStatus.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_ProgramStatus__FieldAccessorTable; }
      }
      
      public const int ProgramStatus_FieldNumber = 1;
      private bool hasProgramStatus_;
      private global::Futu.OpenApi.Pb.Common.ProgramStatus programStatus_;
      public bool HasProgramStatus_ {
        get { return hasProgramStatus_; }
      }
      public global::Futu.OpenApi.Pb.Common.ProgramStatus ProgramStatus_ {
        get { return programStatus_ ?? global::Futu.OpenApi.Pb.Common.ProgramStatus.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasProgramStatus_) return false;
          if (!ProgramStatus_.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _programStatusFieldNames;
        if (hasProgramStatus_) {
          output.WriteMessage(1, field_names[0], ProgramStatus_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProgramStatus_) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ProgramStatus_);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static ProgramStatus ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static ProgramStatus ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static ProgramStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static ProgramStatus ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private ProgramStatus MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(ProgramStatus prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<ProgramStatus, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(ProgramStatus cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private ProgramStatus result;
        
        private ProgramStatus PrepareBuilder() {
          if (resultIsReadOnly) {
            ProgramStatus original = result;
            result = new ProgramStatus();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override ProgramStatus MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.ProgramStatus.Descriptor; }
        }
        
        public override ProgramStatus DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.ProgramStatus.DefaultInstance; }
        }
        
        public override ProgramStatus BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is ProgramStatus) {
            return MergeFrom((ProgramStatus) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(ProgramStatus other) {
          if (other == global::Futu.OpenApi.Pb.Notify.ProgramStatus.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasProgramStatus_) {
            MergeProgramStatus_(other.ProgramStatus_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_programStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _programStatusFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.Common.ProgramStatus.Builder subBuilder = global::Futu.OpenApi.Pb.Common.ProgramStatus.CreateBuilder();
                if (result.hasProgramStatus_) {
                  subBuilder.MergeFrom(ProgramStatus_);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                ProgramStatus_ = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasProgramStatus_ {
         get { return result.hasProgramStatus_; }
        }
        public global::Futu.OpenApi.Pb.Common.ProgramStatus ProgramStatus_ {
          get { return result.ProgramStatus_; }
          set { SetProgramStatus_(value); }
        }
        public Builder SetProgramStatus_(global::Futu.OpenApi.Pb.Common.ProgramStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasProgramStatus_ = true;
          result.programStatus_ = value;
          return this;
        }
        public Builder SetProgramStatus_(global::Futu.OpenApi.Pb.Common.ProgramStatus.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasProgramStatus_ = true;
          result.programStatus_ = builderForValue.Build();
          return this;
        }
        public Builder MergeProgramStatus_(global::Futu.OpenApi.Pb.Common.ProgramStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasProgramStatus_ &&
              result.programStatus_ != global::Futu.OpenApi.Pb.Common.ProgramStatus.DefaultInstance) {
              result.programStatus_ = global::Futu.OpenApi.Pb.Common.ProgramStatus.CreateBuilder(result.programStatus_).MergeFrom(value).BuildPartial();
          } else {
            result.programStatus_ = value;
          }
          result.hasProgramStatus_ = true;
          return this;
        }
        public Builder ClearProgramStatus_() {
          PrepareBuilder();
          result.hasProgramStatus_ = false;
          result.programStatus_ = null;
          return this;
        }
      }
      static ProgramStatus() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ConnectStatus : pb::GeneratedMessage<ConnectStatus, ConnectStatus.Builder> {
      private ConnectStatus() { }
      private static readonly ConnectStatus defaultInstance = new ConnectStatus().MakeReadOnly();
      private static readonly string[] _connectStatusFieldNames = new string[] { "qotLogined", "trdLogined" };
      private static readonly uint[] _connectStatusFieldTags = new uint[] { 8, 16 };
      public static ConnectStatus DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override ConnectStatus DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override ConnectStatus ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_ConnectStatus__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<ConnectStatus, ConnectStatus.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_ConnectStatus__FieldAccessorTable; }
      }
      
      public const int QotLoginedFieldNumber = 1;
      private bool hasQotLogined;
      private bool qotLogined_;
      public bool HasQotLogined {
        get { return hasQotLogined; }
      }
      public bool QotLogined {
        get { return qotLogined_; }
      }
      
      public const int TrdLoginedFieldNumber = 2;
      private bool hasTrdLogined;
      private bool trdLogined_;
      public bool HasTrdLogined {
        get { return hasTrdLogined; }
      }
      public bool TrdLogined {
        get { return trdLogined_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasQotLogined) return false;
          if (!hasTrdLogined) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _connectStatusFieldNames;
        if (hasQotLogined) {
          output.WriteBool(1, field_names[0], QotLogined);
        }
        if (hasTrdLogined) {
          output.WriteBool(2, field_names[1], TrdLogined);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasQotLogined) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, QotLogined);
        }
        if (hasTrdLogined) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, TrdLogined);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static ConnectStatus ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static ConnectStatus ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static ConnectStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static ConnectStatus ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private ConnectStatus MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(ConnectStatus prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<ConnectStatus, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(ConnectStatus cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private ConnectStatus result;
        
        private ConnectStatus PrepareBuilder() {
          if (resultIsReadOnly) {
            ConnectStatus original = result;
            result = new ConnectStatus();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override ConnectStatus MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.ConnectStatus.Descriptor; }
        }
        
        public override ConnectStatus DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.ConnectStatus.DefaultInstance; }
        }
        
        public override ConnectStatus BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is ConnectStatus) {
            return MergeFrom((ConnectStatus) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(ConnectStatus other) {
          if (other == global::Futu.OpenApi.Pb.Notify.ConnectStatus.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasQotLogined) {
            QotLogined = other.QotLogined;
          }
          if (other.HasTrdLogined) {
            TrdLogined = other.TrdLogined;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_connectStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _connectStatusFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasQotLogined = input.ReadBool(ref result.qotLogined_);
                break;
              }
              case 16: {
                result.hasTrdLogined = input.ReadBool(ref result.trdLogined_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasQotLogined {
          get { return result.hasQotLogined; }
        }
        public bool QotLogined {
          get { return result.QotLogined; }
          set { SetQotLogined(value); }
        }
        public Builder SetQotLogined(bool value) {
          PrepareBuilder();
          result.hasQotLogined = true;
          result.qotLogined_ = value;
          return this;
        }
        public Builder ClearQotLogined() {
          PrepareBuilder();
          result.hasQotLogined = false;
          result.qotLogined_ = false;
          return this;
        }
        
        public bool HasTrdLogined {
          get { return result.hasTrdLogined; }
        }
        public bool TrdLogined {
          get { return result.TrdLogined; }
          set { SetTrdLogined(value); }
        }
        public Builder SetTrdLogined(bool value) {
          PrepareBuilder();
          result.hasTrdLogined = true;
          result.trdLogined_ = value;
          return this;
        }
        public Builder ClearTrdLogined() {
          PrepareBuilder();
          result.hasTrdLogined = false;
          result.trdLogined_ = false;
          return this;
        }
      }
      static ConnectStatus() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class QotRight : pb::GeneratedMessage<QotRight, QotRight.Builder> {
      private QotRight() { }
      private static readonly QotRight defaultInstance = new QotRight().MakeReadOnly();
      private static readonly string[] _qotRightFieldNames = new string[] { "cnQotRight", "hasUSOptionQotRight", "hkOptionQotRight", "hkQotRight", "usQotRight" };
      private static readonly uint[] _qotRightFieldTags = new uint[] { 48, 64, 56, 32, 40 };
      public static QotRight DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override QotRight DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override QotRight ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_QotRight__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<QotRight, QotRight.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_QotRight__FieldAccessorTable; }
      }
      
      public const int HkQotRightFieldNumber = 4;
      private bool hasHkQotRight;
      private int hkQotRight_;
      public bool HasHkQotRight {
        get { return hasHkQotRight; }
      }
      public int HkQotRight {
        get { return hkQotRight_; }
      }
      
      public const int UsQotRightFieldNumber = 5;
      private bool hasUsQotRight;
      private int usQotRight_;
      public bool HasUsQotRight {
        get { return hasUsQotRight; }
      }
      public int UsQotRight {
        get { return usQotRight_; }
      }
      
      public const int CnQotRightFieldNumber = 6;
      private bool hasCnQotRight;
      private int cnQotRight_;
      public bool HasCnQotRight {
        get { return hasCnQotRight; }
      }
      public int CnQotRight {
        get { return cnQotRight_; }
      }
      
      public const int HkOptionQotRightFieldNumber = 7;
      private bool hasHkOptionQotRight;
      private int hkOptionQotRight_;
      public bool HasHkOptionQotRight {
        get { return hasHkOptionQotRight; }
      }
      public int HkOptionQotRight {
        get { return hkOptionQotRight_; }
      }
      
      public const int HasUSOptionQotRightFieldNumber = 8;
      private bool hasHasUSOptionQotRight;
      private bool hasUSOptionQotRight_;
      public bool HasHasUSOptionQotRight {
        get { return hasHasUSOptionQotRight; }
      }
      public bool HasUSOptionQotRight {
        get { return hasUSOptionQotRight_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasHkQotRight) return false;
          if (!hasUsQotRight) return false;
          if (!hasCnQotRight) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _qotRightFieldNames;
        if (hasHkQotRight) {
          output.WriteInt32(4, field_names[3], HkQotRight);
        }
        if (hasUsQotRight) {
          output.WriteInt32(5, field_names[4], UsQotRight);
        }
        if (hasCnQotRight) {
          output.WriteInt32(6, field_names[0], CnQotRight);
        }
        if (hasHkOptionQotRight) {
          output.WriteInt32(7, field_names[2], HkOptionQotRight);
        }
        if (hasHasUSOptionQotRight) {
          output.WriteBool(8, field_names[1], HasUSOptionQotRight);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHkQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, HkQotRight);
        }
        if (hasUsQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, UsQotRight);
        }
        if (hasCnQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, CnQotRight);
        }
        if (hasHkOptionQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, HkOptionQotRight);
        }
        if (hasHasUSOptionQotRight) {
          size += pb::CodedOutputStream.ComputeBoolSize(8, HasUSOptionQotRight);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static QotRight ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static QotRight ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static QotRight ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static QotRight ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static QotRight ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static QotRight ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static QotRight ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static QotRight ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static QotRight ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static QotRight ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private QotRight MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(QotRight prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<QotRight, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(QotRight cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private QotRight result;
        
        private QotRight PrepareBuilder() {
          if (resultIsReadOnly) {
            QotRight original = result;
            result = new QotRight();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override QotRight MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.QotRight.Descriptor; }
        }
        
        public override QotRight DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.QotRight.DefaultInstance; }
        }
        
        public override QotRight BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is QotRight) {
            return MergeFrom((QotRight) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(QotRight other) {
          if (other == global::Futu.OpenApi.Pb.Notify.QotRight.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasHkQotRight) {
            HkQotRight = other.HkQotRight;
          }
          if (other.HasUsQotRight) {
            UsQotRight = other.UsQotRight;
          }
          if (other.HasCnQotRight) {
            CnQotRight = other.CnQotRight;
          }
          if (other.HasHkOptionQotRight) {
            HkOptionQotRight = other.HkOptionQotRight;
          }
          if (other.HasHasUSOptionQotRight) {
            HasUSOptionQotRight = other.HasUSOptionQotRight;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_qotRightFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _qotRightFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 32: {
                result.hasHkQotRight = input.ReadInt32(ref result.hkQotRight_);
                break;
              }
              case 40: {
                result.hasUsQotRight = input.ReadInt32(ref result.usQotRight_);
                break;
              }
              case 48: {
                result.hasCnQotRight = input.ReadInt32(ref result.cnQotRight_);
                break;
              }
              case 56: {
                result.hasHkOptionQotRight = input.ReadInt32(ref result.hkOptionQotRight_);
                break;
              }
              case 64: {
                result.hasHasUSOptionQotRight = input.ReadBool(ref result.hasUSOptionQotRight_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasHkQotRight {
          get { return result.hasHkQotRight; }
        }
        public int HkQotRight {
          get { return result.HkQotRight; }
          set { SetHkQotRight(value); }
        }
        public Builder SetHkQotRight(int value) {
          PrepareBuilder();
          result.hasHkQotRight = true;
          result.hkQotRight_ = value;
          return this;
        }
        public Builder ClearHkQotRight() {
          PrepareBuilder();
          result.hasHkQotRight = false;
          result.hkQotRight_ = 0;
          return this;
        }
        
        public bool HasUsQotRight {
          get { return result.hasUsQotRight; }
        }
        public int UsQotRight {
          get { return result.UsQotRight; }
          set { SetUsQotRight(value); }
        }
        public Builder SetUsQotRight(int value) {
          PrepareBuilder();
          result.hasUsQotRight = true;
          result.usQotRight_ = value;
          return this;
        }
        public Builder ClearUsQotRight() {
          PrepareBuilder();
          result.hasUsQotRight = false;
          result.usQotRight_ = 0;
          return this;
        }
        
        public bool HasCnQotRight {
          get { return result.hasCnQotRight; }
        }
        public int CnQotRight {
          get { return result.CnQotRight; }
          set { SetCnQotRight(value); }
        }
        public Builder SetCnQotRight(int value) {
          PrepareBuilder();
          result.hasCnQotRight = true;
          result.cnQotRight_ = value;
          return this;
        }
        public Builder ClearCnQotRight() {
          PrepareBuilder();
          result.hasCnQotRight = false;
          result.cnQotRight_ = 0;
          return this;
        }
        
        public bool HasHkOptionQotRight {
          get { return result.hasHkOptionQotRight; }
        }
        public int HkOptionQotRight {
          get { return result.HkOptionQotRight; }
          set { SetHkOptionQotRight(value); }
        }
        public Builder SetHkOptionQotRight(int value) {
          PrepareBuilder();
          result.hasHkOptionQotRight = true;
          result.hkOptionQotRight_ = value;
          return this;
        }
        public Builder ClearHkOptionQotRight() {
          PrepareBuilder();
          result.hasHkOptionQotRight = false;
          result.hkOptionQotRight_ = 0;
          return this;
        }
        
        public bool HasHasUSOptionQotRight {
          get { return result.hasHasUSOptionQotRight; }
        }
        public bool HasUSOptionQotRight {
          get { return result.HasUSOptionQotRight; }
          set { SetHasUSOptionQotRight(value); }
        }
        public Builder SetHasUSOptionQotRight(bool value) {
          PrepareBuilder();
          result.hasHasUSOptionQotRight = true;
          result.hasUSOptionQotRight_ = value;
          return this;
        }
        public Builder ClearHasUSOptionQotRight() {
          PrepareBuilder();
          result.hasHasUSOptionQotRight = false;
          result.hasUSOptionQotRight_ = false;
          return this;
        }
      }
      static QotRight() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class APILevel : pb::GeneratedMessage<APILevel, APILevel.Builder> {
      private APILevel() { }
      private static readonly APILevel defaultInstance = new APILevel().MakeReadOnly();
      private static readonly string[] _aPILevelFieldNames = new string[] { "apiLevel" };
      private static readonly uint[] _aPILevelFieldTags = new uint[] { 26 };
      public static APILevel DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override APILevel DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override APILevel ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_APILevel__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<APILevel, APILevel.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_APILevel__FieldAccessorTable; }
      }
      
      public const int ApiLevelFieldNumber = 3;
      private bool hasApiLevel;
      private string apiLevel_ = "";
      public bool HasApiLevel {
        get { return hasApiLevel; }
      }
      public string ApiLevel {
        get { return apiLevel_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasApiLevel) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _aPILevelFieldNames;
        if (hasApiLevel) {
          output.WriteString(3, field_names[0], ApiLevel);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasApiLevel) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ApiLevel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static APILevel ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static APILevel ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static APILevel ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static APILevel ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static APILevel ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static APILevel ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static APILevel ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static APILevel ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static APILevel ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static APILevel ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private APILevel MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(APILevel prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<APILevel, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(APILevel cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private APILevel result;
        
        private APILevel PrepareBuilder() {
          if (resultIsReadOnly) {
            APILevel original = result;
            result = new APILevel();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override APILevel MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.APILevel.Descriptor; }
        }
        
        public override APILevel DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.APILevel.DefaultInstance; }
        }
        
        public override APILevel BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is APILevel) {
            return MergeFrom((APILevel) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(APILevel other) {
          if (other == global::Futu.OpenApi.Pb.Notify.APILevel.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasApiLevel) {
            ApiLevel = other.ApiLevel;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_aPILevelFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _aPILevelFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 26: {
                result.hasApiLevel = input.ReadString(ref result.apiLevel_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasApiLevel {
          get { return result.hasApiLevel; }
        }
        public string ApiLevel {
          get { return result.ApiLevel; }
          set { SetApiLevel(value); }
        }
        public Builder SetApiLevel(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasApiLevel = true;
          result.apiLevel_ = value;
          return this;
        }
        public Builder ClearApiLevel() {
          PrepareBuilder();
          result.hasApiLevel = false;
          result.apiLevel_ = "";
          return this;
        }
      }
      static APILevel() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
      private S2C() { }
      private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
      private static readonly string[] _s2CFieldNames = new string[] { "apiLevel", "connectStatus", "event", "programStatus", "qotRight", "type" };
      private static readonly uint[] _s2CFieldTags = new uint[] { 50, 34, 18, 26, 42, 8 };
      public static S2C DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override S2C DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override S2C ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_S2C__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_S2C__FieldAccessorTable; }
      }
      
      public const int TypeFieldNumber = 1;
      private bool hasType;
      private int type_;
      public bool HasType {
        get { return hasType; }
      }
      public int Type {
        get { return type_; }
      }
      
      public const int EventFieldNumber = 2;
      private bool hasEvent;
      private global::Futu.OpenApi.Pb.Notify.GtwEvent event_;
      public bool HasEvent {
        get { return hasEvent; }
      }
      public global::Futu.OpenApi.Pb.Notify.GtwEvent Event {
        get { return event_ ?? global::Futu.OpenApi.Pb.Notify.GtwEvent.DefaultInstance; }
      }
      
      public const int ProgramStatusFieldNumber = 3;
      private bool hasProgramStatus;
      private global::Futu.OpenApi.Pb.Notify.ProgramStatus programStatus_;
      public bool HasProgramStatus {
        get { return hasProgramStatus; }
      }
      public global::Futu.OpenApi.Pb.Notify.ProgramStatus ProgramStatus {
        get { return programStatus_ ?? global::Futu.OpenApi.Pb.Notify.ProgramStatus.DefaultInstance; }
      }
      
      public const int ConnectStatusFieldNumber = 4;
      private bool hasConnectStatus;
      private global::Futu.OpenApi.Pb.Notify.ConnectStatus connectStatus_;
      public bool HasConnectStatus {
        get { return hasConnectStatus; }
      }
      public global::Futu.OpenApi.Pb.Notify.ConnectStatus ConnectStatus {
        get { return connectStatus_ ?? global::Futu.OpenApi.Pb.Notify.ConnectStatus.DefaultInstance; }
      }
      
      public const int QotRightFieldNumber = 5;
      private bool hasQotRight;
      private global::Futu.OpenApi.Pb.Notify.QotRight qotRight_;
      public bool HasQotRight {
        get { return hasQotRight; }
      }
      public global::Futu.OpenApi.Pb.Notify.QotRight QotRight {
        get { return qotRight_ ?? global::Futu.OpenApi.Pb.Notify.QotRight.DefaultInstance; }
      }
      
      public const int ApiLevelFieldNumber = 6;
      private bool hasApiLevel;
      private global::Futu.OpenApi.Pb.Notify.APILevel apiLevel_;
      public bool HasApiLevel {
        get { return hasApiLevel; }
      }
      public global::Futu.OpenApi.Pb.Notify.APILevel ApiLevel {
        get { return apiLevel_ ?? global::Futu.OpenApi.Pb.Notify.APILevel.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasType) return false;
          if (HasEvent) {
            if (!Event.IsInitialized) return false;
          }
          if (HasProgramStatus) {
            if (!ProgramStatus.IsInitialized) return false;
          }
          if (HasConnectStatus) {
            if (!ConnectStatus.IsInitialized) return false;
          }
          if (HasQotRight) {
            if (!QotRight.IsInitialized) return false;
          }
          if (HasApiLevel) {
            if (!ApiLevel.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _s2CFieldNames;
        if (hasType) {
          output.WriteInt32(1, field_names[5], Type);
        }
        if (hasEvent) {
          output.WriteMessage(2, field_names[2], Event);
        }
        if (hasProgramStatus) {
          output.WriteMessage(3, field_names[3], ProgramStatus);
        }
        if (hasConnectStatus) {
          output.WriteMessage(4, field_names[1], ConnectStatus);
        }
        if (hasQotRight) {
          output.WriteMessage(5, field_names[4], QotRight);
        }
        if (hasApiLevel) {
          output.WriteMessage(6, field_names[0], ApiLevel);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Type);
        }
        if (hasEvent) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Event);
        }
        if (hasProgramStatus) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ProgramStatus);
        }
        if (hasConnectStatus) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, ConnectStatus);
        }
        if (hasQotRight) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, QotRight);
        }
        if (hasApiLevel) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, ApiLevel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static S2C ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private S2C MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(S2C prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(S2C cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private S2C result;
        
        private S2C PrepareBuilder() {
          if (resultIsReadOnly) {
            S2C original = result;
            result = new S2C();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override S2C MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.S2C.Descriptor; }
        }
        
        public override S2C DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.S2C.DefaultInstance; }
        }
        
        public override S2C BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is S2C) {
            return MergeFrom((S2C) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(S2C other) {
          if (other == global::Futu.OpenApi.Pb.Notify.S2C.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasType) {
            Type = other.Type;
          }
          if (other.HasEvent) {
            MergeEvent(other.Event);
          }
          if (other.HasProgramStatus) {
            MergeProgramStatus(other.ProgramStatus);
          }
          if (other.HasConnectStatus) {
            MergeConnectStatus(other.ConnectStatus);
          }
          if (other.HasQotRight) {
            MergeQotRight(other.QotRight);
          }
          if (other.HasApiLevel) {
            MergeApiLevel(other.ApiLevel);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _s2CFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasType = input.ReadInt32(ref result.type_);
                break;
              }
              case 18: {
                global::Futu.OpenApi.Pb.Notify.GtwEvent.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.GtwEvent.CreateBuilder();
                if (result.hasEvent) {
                  subBuilder.MergeFrom(Event);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Event = subBuilder.BuildPartial();
                break;
              }
              case 26: {
                global::Futu.OpenApi.Pb.Notify.ProgramStatus.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.ProgramStatus.CreateBuilder();
                if (result.hasProgramStatus) {
                  subBuilder.MergeFrom(ProgramStatus);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                ProgramStatus = subBuilder.BuildPartial();
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.Notify.ConnectStatus.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.ConnectStatus.CreateBuilder();
                if (result.hasConnectStatus) {
                  subBuilder.MergeFrom(ConnectStatus);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                ConnectStatus = subBuilder.BuildPartial();
                break;
              }
              case 42: {
                global::Futu.OpenApi.Pb.Notify.QotRight.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.QotRight.CreateBuilder();
                if (result.hasQotRight) {
                  subBuilder.MergeFrom(QotRight);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                QotRight = subBuilder.BuildPartial();
                break;
              }
              case 50: {
                global::Futu.OpenApi.Pb.Notify.APILevel.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.APILevel.CreateBuilder();
                if (result.hasApiLevel) {
                  subBuilder.MergeFrom(ApiLevel);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                ApiLevel = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasType {
          get { return result.hasType; }
        }
        public int Type {
          get { return result.Type; }
          set { SetType(value); }
        }
        public Builder SetType(int value) {
          PrepareBuilder();
          result.hasType = true;
          result.type_ = value;
          return this;
        }
        public Builder ClearType() {
          PrepareBuilder();
          result.hasType = false;
          result.type_ = 0;
          return this;
        }
        
        public bool HasEvent {
         get { return result.hasEvent; }
        }
        public global::Futu.OpenApi.Pb.Notify.GtwEvent Event {
          get { return result.Event; }
          set { SetEvent(value); }
        }
        public Builder SetEvent(global::Futu.OpenApi.Pb.Notify.GtwEvent value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasEvent = true;
          result.event_ = value;
          return this;
        }
        public Builder SetEvent(global::Futu.OpenApi.Pb.Notify.GtwEvent.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasEvent = true;
          result.event_ = builderForValue.Build();
          return this;
        }
        public Builder MergeEvent(global::Futu.OpenApi.Pb.Notify.GtwEvent value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasEvent &&
              result.event_ != global::Futu.OpenApi.Pb.Notify.GtwEvent.DefaultInstance) {
              result.event_ = global::Futu.OpenApi.Pb.Notify.GtwEvent.CreateBuilder(result.event_).MergeFrom(value).BuildPartial();
          } else {
            result.event_ = value;
          }
          result.hasEvent = true;
          return this;
        }
        public Builder ClearEvent() {
          PrepareBuilder();
          result.hasEvent = false;
          result.event_ = null;
          return this;
        }
        
        public bool HasProgramStatus {
         get { return result.hasProgramStatus; }
        }
        public global::Futu.OpenApi.Pb.Notify.ProgramStatus ProgramStatus {
          get { return result.ProgramStatus; }
          set { SetProgramStatus(value); }
        }
        public Builder SetProgramStatus(global::Futu.OpenApi.Pb.Notify.ProgramStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasProgramStatus = true;
          result.programStatus_ = value;
          return this;
        }
        public Builder SetProgramStatus(global::Futu.OpenApi.Pb.Notify.ProgramStatus.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasProgramStatus = true;
          result.programStatus_ = builderForValue.Build();
          return this;
        }
        public Builder MergeProgramStatus(global::Futu.OpenApi.Pb.Notify.ProgramStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasProgramStatus &&
              result.programStatus_ != global::Futu.OpenApi.Pb.Notify.ProgramStatus.DefaultInstance) {
              result.programStatus_ = global::Futu.OpenApi.Pb.Notify.ProgramStatus.CreateBuilder(result.programStatus_).MergeFrom(value).BuildPartial();
          } else {
            result.programStatus_ = value;
          }
          result.hasProgramStatus = true;
          return this;
        }
        public Builder ClearProgramStatus() {
          PrepareBuilder();
          result.hasProgramStatus = false;
          result.programStatus_ = null;
          return this;
        }
        
        public bool HasConnectStatus {
         get { return result.hasConnectStatus; }
        }
        public global::Futu.OpenApi.Pb.Notify.ConnectStatus ConnectStatus {
          get { return result.ConnectStatus; }
          set { SetConnectStatus(value); }
        }
        public Builder SetConnectStatus(global::Futu.OpenApi.Pb.Notify.ConnectStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasConnectStatus = true;
          result.connectStatus_ = value;
          return this;
        }
        public Builder SetConnectStatus(global::Futu.OpenApi.Pb.Notify.ConnectStatus.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasConnectStatus = true;
          result.connectStatus_ = builderForValue.Build();
          return this;
        }
        public Builder MergeConnectStatus(global::Futu.OpenApi.Pb.Notify.ConnectStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasConnectStatus &&
              result.connectStatus_ != global::Futu.OpenApi.Pb.Notify.ConnectStatus.DefaultInstance) {
              result.connectStatus_ = global::Futu.OpenApi.Pb.Notify.ConnectStatus.CreateBuilder(result.connectStatus_).MergeFrom(value).BuildPartial();
          } else {
            result.connectStatus_ = value;
          }
          result.hasConnectStatus = true;
          return this;
        }
        public Builder ClearConnectStatus() {
          PrepareBuilder();
          result.hasConnectStatus = false;
          result.connectStatus_ = null;
          return this;
        }
        
        public bool HasQotRight {
         get { return result.hasQotRight; }
        }
        public global::Futu.OpenApi.Pb.Notify.QotRight QotRight {
          get { return result.QotRight; }
          set { SetQotRight(value); }
        }
        public Builder SetQotRight(global::Futu.OpenApi.Pb.Notify.QotRight value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasQotRight = true;
          result.qotRight_ = value;
          return this;
        }
        public Builder SetQotRight(global::Futu.OpenApi.Pb.Notify.QotRight.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasQotRight = true;
          result.qotRight_ = builderForValue.Build();
          return this;
        }
        public Builder MergeQotRight(global::Futu.OpenApi.Pb.Notify.QotRight value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasQotRight &&
              result.qotRight_ != global::Futu.OpenApi.Pb.Notify.QotRight.DefaultInstance) {
              result.qotRight_ = global::Futu.OpenApi.Pb.Notify.QotRight.CreateBuilder(result.qotRight_).MergeFrom(value).BuildPartial();
          } else {
            result.qotRight_ = value;
          }
          result.hasQotRight = true;
          return this;
        }
        public Builder ClearQotRight() {
          PrepareBuilder();
          result.hasQotRight = false;
          result.qotRight_ = null;
          return this;
        }
        
        public bool HasApiLevel {
         get { return result.hasApiLevel; }
        }
        public global::Futu.OpenApi.Pb.Notify.APILevel ApiLevel {
          get { return result.ApiLevel; }
          set { SetApiLevel(value); }
        }
        public Builder SetApiLevel(global::Futu.OpenApi.Pb.Notify.APILevel value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasApiLevel = true;
          result.apiLevel_ = value;
          return this;
        }
        public Builder SetApiLevel(global::Futu.OpenApi.Pb.Notify.APILevel.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasApiLevel = true;
          result.apiLevel_ = builderForValue.Build();
          return this;
        }
        public Builder MergeApiLevel(global::Futu.OpenApi.Pb.Notify.APILevel value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasApiLevel &&
              result.apiLevel_ != global::Futu.OpenApi.Pb.Notify.APILevel.DefaultInstance) {
              result.apiLevel_ = global::Futu.OpenApi.Pb.Notify.APILevel.CreateBuilder(result.apiLevel_).MergeFrom(value).BuildPartial();
          } else {
            result.apiLevel_ = value;
          }
          result.hasApiLevel = true;
          return this;
        }
        public Builder ClearApiLevel() {
          PrepareBuilder();
          result.hasApiLevel = false;
          result.apiLevel_ = null;
          return this;
        }
      }
      static S2C() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
      private Response() { }
      private static readonly Response defaultInstance = new Response().MakeReadOnly();
      private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
      private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
      public static Response DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Response DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Response ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_Response__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_Response__FieldAccessorTable; }
      }
      
      public const int RetTypeFieldNumber = 1;
      private bool hasRetType;
      private int retType_ = -400;
      public bool HasRetType {
        get { return hasRetType; }
      }
      public int RetType {
        get { return retType_; }
      }
      
      public const int RetMsgFieldNumber = 2;
      private bool hasRetMsg;
      private string retMsg_ = "";
      public bool HasRetMsg {
        get { return hasRetMsg; }
      }
      public string RetMsg {
        get { return retMsg_; }
      }
      
      public const int ErrCodeFieldNumber = 3;
      private bool hasErrCode;
      private int errCode_;
      public bool HasErrCode {
        get { return hasErrCode; }
      }
      public int ErrCode {
        get { return errCode_; }
      }
      
      public const int S2CFieldNumber = 4;
      private bool hasS2C;
      private global::Futu.OpenApi.Pb.Notify.S2C s2C_;
      public bool HasS2C {
        get { return hasS2C; }
      }
      public global::Futu.OpenApi.Pb.Notify.S2C S2C {
        get { return s2C_ ?? global::Futu.OpenApi.Pb.Notify.S2C.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRetType) return false;
          if (HasS2C) {
            if (!S2C.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _responseFieldNames;
        if (hasRetType) {
          output.WriteInt32(1, field_names[2], RetType);
        }
        if (hasRetMsg) {
          output.WriteString(2, field_names[1], RetMsg);
        }
        if (hasErrCode) {
          output.WriteInt32(3, field_names[0], ErrCode);
        }
        if (hasS2C) {
          output.WriteMessage(4, field_names[3], S2C);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRetType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
        }
        if (hasRetMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
        }
        if (hasErrCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
        }
        if (hasS2C) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Response ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Response MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Response prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Response cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Response result;
        
        private Response PrepareBuilder() {
          if (resultIsReadOnly) {
            Response original = result;
            result = new Response();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Response MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.Response.Descriptor; }
        }
        
        public override Response DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.Response.DefaultInstance; }
        }
        
        public override Response BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Response) {
            return MergeFrom((Response) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Response other) {
          if (other == global::Futu.OpenApi.Pb.Notify.Response.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRetType) {
            RetType = other.RetType;
          }
          if (other.HasRetMsg) {
            RetMsg = other.RetMsg;
          }
          if (other.HasErrCode) {
            ErrCode = other.ErrCode;
          }
          if (other.HasS2C) {
            MergeS2C(other.S2C);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRetType = input.ReadInt32(ref result.retType_);
                break;
              }
              case 18: {
                result.hasRetMsg = input.ReadString(ref result.retMsg_);
                break;
              }
              case 24: {
                result.hasErrCode = input.ReadInt32(ref result.errCode_);
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.Notify.S2C.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.S2C.CreateBuilder();
                if (result.hasS2C) {
                  subBuilder.MergeFrom(S2C);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                S2C = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRetType {
          get { return result.hasRetType; }
        }
        public int RetType {
          get { return result.RetType; }
          set { SetRetType(value); }
        }
        public Builder SetRetType(int value) {
          PrepareBuilder();
          result.hasRetType = true;
          result.retType_ = value;
          return this;
        }
        public Builder ClearRetType() {
          PrepareBuilder();
          result.hasRetType = false;
          result.retType_ = -400;
          return this;
        }
        
        public bool HasRetMsg {
          get { return result.hasRetMsg; }
        }
        public string RetMsg {
          get { return result.RetMsg; }
          set { SetRetMsg(value); }
        }
        public Builder SetRetMsg(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRetMsg = true;
          result.retMsg_ = value;
          return this;
        }
        public Builder ClearRetMsg() {
          PrepareBuilder();
          result.hasRetMsg = false;
          result.retMsg_ = "";
          return this;
        }
        
        public bool HasErrCode {
          get { return result.hasErrCode; }
        }
        public int ErrCode {
          get { return result.ErrCode; }
          set { SetErrCode(value); }
        }
        public Builder SetErrCode(int value) {
          PrepareBuilder();
          result.hasErrCode = true;
          result.errCode_ = value;
          return this;
        }
        public Builder ClearErrCode() {
          PrepareBuilder();
          result.hasErrCode = false;
          result.errCode_ = 0;
          return this;
        }
        
        public bool HasS2C {
         get { return result.hasS2C; }
        }
        public global::Futu.OpenApi.Pb.Notify.S2C S2C {
          get { return result.S2C; }
          set { SetS2C(value); }
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.Notify.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = value;
          return this;
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.Notify.S2C.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = builderForValue.Build();
          return this;
        }
        public Builder MergeS2C(global::Futu.OpenApi.Pb.Notify.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasS2C &&
              result.s2C_ != global::Futu.OpenApi.Pb.Notify.S2C.DefaultInstance) {
              result.s2C_ = global::Futu.OpenApi.Pb.Notify.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
          } else {
            result.s2C_ = value;
          }
          result.hasS2C = true;
          return this;
        }
        public Builder ClearS2C() {
          PrepareBuilder();
          result.hasS2C = false;
          result.s2C_ = null;
          return this;
        }
      }
      static Response() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
